# Default values for baseapp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

environment: local  

image:
  repository: acr-panda-registry-vpc.cn-shanghai.cr.aliyuncs.com/xxx/ui-front
  # pullPolicy：
  # IfNotPresent – Downloads a new version of the image if one does not exist in the cluster.
  # Always – Pulls the image on every restart or deployment.
  # Latest – Pulls the most up-to-date version available.
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "local.1000"

imagePullSecrets: []
nameOverride: "jpi-java"
# helm install <full name override> <chart name>/ --values <chart name>/values.yaml
# helm install jpi-java-chart baseapp/ --values baseapp/values.yaml
# helm install jpi-java-chart baseapp/ --values baseapp/values.yaml --dry-run --debug
# helm template jpi-java-chart baseapp/ --values baseapp/values.yaml --show-only templates/service.yaml

fullnameOverride: "jpi-java-chart"

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

#service:
#  type: ClusterIP
#  port: 80


# default namespace： environment-firstPart（name）-》 dev-jpi
#namespace: default

service:
  # default：name-svc
  #name: nginx
  #type:  ClusterIP/LoadBalancer
  type: LoadBalancer
  httpsPort: 443
  httpPort: 80
  targetPort: 8085
  #labels:
  #  run: shawntest

## https 443 only
#  annotations:
#    service.beta.kubernetes.io/alibaba-cloud-loadbalancer-cert-id: 1715141351190592_18990421b4c_-111067350_222636765
#    service.beta.kubernetes.io/alibaba-cloud-loadbalancer-protocol-port: 'https:443'
#    service.beta.kubernetes.io/alibaba-cloud-loadbalancer-scheduler: rr
#    service.beta.kubernetes.io/alicloud-loadbalancer-address-type: internet
#    service.beta.kubernetes.io/alicloud-loadbalancer-force-override-listeners: 'true'
#    service.beta.kubernetes.io/alicloud-loadbalancer-id: lb-uf69xqly1ozmyrpn7wwww

## http 80 only
#  annotations:
#    service.beta.kubernetes.io/alibaba-cloud-loadbalancer-protocol-port: 'http:80'
#    service.beta.kubernetes.io/alibaba-cloud-loadbalancer-scheduler: rr
#    service.beta.kubernetes.io/alicloud-loadbalancer-address-type: internet
#    service.beta.kubernetes.io/alicloud-loadbalancer-force-override-listeners: 'true'
#    service.beta.kubernetes.io/alicloud-loadbalancer-id: lb-uf69xqly1ozmyrpn7wwww


# forward-port http80 to http443
  annotations:
    service.beta.kubernetes.io/alibaba-cloud-loadbalancer-cert-id: 1715141351190592_18990421b4c_-111067350_222636765
    service.beta.kubernetes.io/alibaba-cloud-loadbalancer-protocol-port: "https:443,http:80"
    service.beta.kubernetes.io/alibaba-cloud-loadbalancer-forward-port: "80:443"
    service.beta.kubernetes.io/alibaba-cloud-loadbalancer-scheduler: rr
    service.beta.kubernetes.io/alicloud-loadbalancer-address-type: internet
    service.beta.kubernetes.io/alicloud-loadbalancer-force-override-listeners: 'true'
    service.beta.kubernetes.io/alicloud-loadbalancer-id: lb-uf69xqly1ozmyrpn7wwww

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

#resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
resources:
  limits:
    cpu: "1"
    memory: 100Mi
  requests:
    cpu: 100m
    memory: 50Mi





livenessProbe:
  tcpSocket:
    port: 80
  initialDelaySeconds: 10
  timeoutSeconds: 1
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 3
readinessProbe:
  tcpSocket:
    port: 80
  initialDelaySeconds: 10
  timeoutSeconds: 1
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 3

#livenessProbe:
#  httpGet:
#    path: /health
#    port: 8085
#    scheme: HTTP
#  initialDelaySeconds: 10
#  timeoutSeconds: 1
#  periodSeconds: 10
#  successThreshold: 1
#  failureThreshold: 3
#
#readinessProbe:
#  httpGet:
#    path: /health
#    port: 8085
#    scheme: HTTP
#  initialDelaySeconds: 10
#  timeoutSeconds: 1
#  periodSeconds: 10
#  successThreshold: 1
#  failureThreshold: 3
#
#readinessProbe:
#  exec:
#    command:
#      - /bin/bash
#      - -c
#      - |
#        echo $regionId $POD_IP >/tmp/shawn.txt
#  initialDelaySeconds: 10
#  timeoutSeconds: 1
#  periodSeconds: 10
#  successThreshold: 1
#  failureThreshold: 3

lifecycle:
  preStop:
    exec:
      command:
        - sleep
        - "30"
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

#affinity: {}
affinity:
  nodeAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 1
        preference:
          matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - cn-shanghai.10.0.40.121